#!/usr/bin/env python
# coding: utf-8

# In[2]:


mkdir -p anomaly_deployment


# In[17]:


cd anomaly_deployment


# In[15]:


PROJECT_ID = "crowncoins-prod-lake-server"
REGION = "us-central1"

# Updated for ML anomaly detection models
MODEL_ARTIFACT_DIR = "gs://ds-models-bucket/anomaly-detection/ml_anomaly_model/"  
REPOSITORY = "ds-models-repo"
IMAGE = "ml-anomaly-detection-predictor"  # Updated for ML models
MODEL_DISPLAY_NAME = "ml-anomaly-detection-model"  # Updated for ML models

# Bucket configuration
BUCKET_NAME = "ds-models-bucket"
BUCKET_URI = f"gs://{BUCKET_NAME}"
MODEL_DIRECTORY = "anomaly-detection/ml_anomaly_model"  # Updated to match bucket structure

# Local development directories
USER_SRC_DIR = "src_dir_sdk"  # Updated for ML models
LOCAL_MODEL_ARTIFACTS_DIR = "model_artifacts"  # Updated for ML models


# In[6]:


mkdir -p src_dir_sdk


# In[18]:


mkdir -p models


# In[7]:


mkdir -p model_artifacts


# In[10]:


import os

# Check current working directory
print("Current working directory:", os.getcwd())

# List what's in the current directory
print("Files in current directory:", os.listdir('.'))

# Create the directory (this will work even if it already exists)
os.makedirs('src_dir_sdk', exist_ok=True)
print("Directory created successfully")

# Verify it was created
print("Files after creating directory:", os.listdir('.'))


# In[11]:


get_ipython().run_cell_magic('writefile', 'requirements.txt', '\n# Core ML and Data Processing\npandas>=1.3.0,<2.0.0\nnumpy~=1.20\njoblib~=1.0\nscikit-learn==1.4.0\n\n# API Framework\nfastapi\nuvicorn==0.17.6\npydantic>=1.8.0,<2.0.0\n\n# Google Cloud Services\ngoogle-cloud-storage>=1.26.0,<2.0.0\ngoogle-cloud-aiplatform[prediction]>=1.16.0\ngoogle-cloud-logging>=2.0.0,<4.0.0\n\n# Monitoring\nprometheus-client>=0.13.0\n\n# Data Serialization\npickle-mixin\n')


# In[12]:


get_ipython().run_cell_magic('writefile', 'predictor.py', '\nimport numpy as np\nimport pickle\nimport json\nimport pandas as pd\nimport os\nfrom google.cloud.aiplatform.prediction.predictor import Predictor\nfrom google.cloud.aiplatform.utils import prediction_utils\n\nclass MLAnomalyPredictor(Predictor):\n    \n    def __init__(self):\n        self._models = {}\n        self._scalers = {}\n        self._config = None\n        self._time_patterns = {}\n    \n    def load(self, artifacts_uri: str):\n        """Load rolling 7-day ML models."""\n        prediction_utils.download_model_artifacts(artifacts_uri)\n        \n        downloaded_files = os.listdir(".")\n        print(f"Downloaded files: {downloaded_files}")\n        \n        # Load config\n        if "config.json" not in downloaded_files:\n            raise Exception(f"config.json not found. Available: {downloaded_files}")\n        \n        with open("config.json", "r") as f:\n            self._config = json.load(f)\n        \n        # Load models and scalers\n        models_dir = "models"\n        if models_dir not in downloaded_files:\n            raise Exception(f"models/ directory not found")\n        \n        model_files = os.listdir(models_dir)\n        platforms_loaded = 0\n        \n        for platform in self._config["platforms"]:\n            model_file = f"{platform}_model.pkl"\n            scaler_file = f"{platform}_scaler.pkl"\n            \n            if model_file in model_files and scaler_file in model_files:\n                with open(f"{models_dir}/{model_file}", "rb") as f:\n                    self._models[platform] = pickle.load(f)\n                with open(f"{models_dir}/{scaler_file}", "rb") as f:\n                    self._scalers[platform] = pickle.load(f)\n                platforms_loaded += 1\n            else:\n                print(f"⚠️ Missing files for {platform}")\n        \n        print(f"✅ Loaded {platforms_loaded} platforms with {len(self._config[\'features\'])} rolling features")\n    \n    def _calculate_hour_of_week_factors(self, df, platform):\n        """Calculate hour-of-week factors for this platform."""\n        # Create hour-of-week identifier (0-167: Monday 0AM = 0, Sunday 11PM = 167)\n        df[\'hour_of_day\'] = df[\'hour\'].dt.hour\n        df[\'day_of_week\'] = df[\'hour\'].dt.dayofweek\n        df[\'hour_of_week\'] = df[\'day_of_week\'] * 24 + df[\'hour_of_day\']\n        \n        # Calculate overall averages (use last 7 days of data)\n        recent_data = df.tail(168 * 2)  # Use up to 2 weeks for stability\n        overall_avg_success = recent_data[\'success_rate\'].mean()\n        overall_avg_volume = recent_data[\'total\'].mean()\n        \n        # Calculate hour-of-week factors\n        hour_stats = recent_data.groupby(\'hour_of_week\').agg({\n            \'success_rate\': \'mean\',\n            \'total\': \'mean\'\n        }).reset_index()\n        \n        # Calculate relative factors\n        hour_stats[\'hour_of_week_success_factor\'] = hour_stats[\'success_rate\'] / overall_avg_success\n        hour_stats[\'hour_of_week_volume_factor\'] = hour_stats[\'total\'] / overall_avg_volume\n        \n        # Clip extreme values\n        hour_stats[\'hour_of_week_success_factor\'] = np.clip(hour_stats[\'hour_of_week_success_factor\'], 0.3, 3.0)\n        hour_stats[\'hour_of_week_volume_factor\'] = np.clip(hour_stats[\'hour_of_week_volume_factor\'], 0.3, 3.0)\n        \n        # Create lookup dictionary\n        factors = {}\n        for _, row in hour_stats.iterrows():\n            factors[row[\'hour_of_week\']] = {\n                \'success_factor\': row[\'hour_of_week_success_factor\'],\n                \'volume_factor\': row[\'hour_of_week_volume_factor\']\n            }\n        \n        return factors\n    \n    def _engineer_rolling_features(self, df, platform):\n        """Engineer 12 rolling ML features - ALIGNED with rolling training code."""\n        df = df.copy()\n        \n        # Sort by hour first\n        df[\'hour\'] = pd.to_datetime(df[\'hour\'])\n        df = df.sort_values(\'hour\').reset_index(drop=True)\n        \n        # CORE METRICS\n        df[\'success_rate\'] = df[\'approved\'] / df[\'total\'].replace(0, 1)\n        \n        # TIME CONTEXT\n        df[\'hour_of_day\'] = df[\'hour\'].dt.hour\n        df[\'day_of_week\'] = df[\'hour\'].dt.dayofweek\n        df[\'hour_of_week\'] = df[\'day_of_week\'] * 24 + df[\'hour_of_day\']\n        \n        # Calculate hour-of-week factors for this platform\n        hour_factors = self._calculate_hour_of_week_factors(df, platform)\n        \n        # Map hour-of-week factors\n        df[\'hour_of_week_success_factor\'] = df[\'hour_of_week\'].map(\n            lambda x: hour_factors.get(x, {}).get(\'success_factor\', 1.0)\n        )\n        df[\'hour_of_week_volume_factor\'] = df[\'hour_of_week\'].map(\n            lambda x: hour_factors.get(x, {}).get(\'volume_factor\', 1.0)\n        )\n        \n        # ROLLING 7-DAY BASELINES (168 periods = 7 days * 24 hours)\n        df[\'rolling_7day_avg_success\'] = df[\'success_rate\'].rolling(window=168, min_periods=24).mean()\n        df[\'rolling_7day_avg_volume\'] = df[\'total\'].rolling(window=168, min_periods=24).mean()\n        \n        # Rolling same-hour averages (for each Monday 9AM, average last 7 Monday 9AMs)\n        df[\'rolling_same_hour_success\'] = df.groupby(\'hour_of_week\')[\'success_rate\'].transform(\n            lambda x: x.rolling(window=7, min_periods=2).mean()\n        )\n        df[\'rolling_same_hour_volume\'] = df.groupby(\'hour_of_week\')[\'total\'].transform(\n            lambda x: x.rolling(window=7, min_periods=2).mean()\n        )\n        \n        # Fill NaN values\n        df[\'rolling_same_hour_success\'] = df[\'rolling_same_hour_success\'].fillna(df[\'rolling_7day_avg_success\'])\n        df[\'rolling_same_hour_volume\'] = df[\'rolling_same_hour_volume\'].fillna(df[\'rolling_7day_avg_volume\'])\n        \n        # 4-period aggregation (1 hour)\n        df[\'success_rate_4p\'] = df[\'success_rate\'].rolling(4, min_periods=1).mean()\n        df[\'total_4p\'] = df[\'total\'].rolling(4, min_periods=1).sum()\n        df[\'success_rate_from_4p\'] = df[\'approved\'].rolling(4, min_periods=1).sum() / df[\'total_4p\'].replace(0, 1)\n        \n        # Expected values based on rolling + factors\n        df[\'expected_success_4p\'] = df[\'rolling_same_hour_success\'] * df[\'hour_of_week_success_factor\']\n        df[\'expected_volume_4p\'] = df[\'rolling_same_hour_volume\'] * df[\'hour_of_week_volume_factor\'] * 4\n        \n        # FEATURE 1-4: ROLLING-BASED RELATIVE PERFORMANCE\n        df[\'success_vs_rolling_expected\'] = df[\'success_rate_from_4p\'] / df[\'expected_success_4p\'].replace(0, 0.5)\n        df[\'volume_vs_rolling_expected\'] = df[\'total_4p\'] / df[\'expected_volume_4p\'].replace(0, 10)\n        df[\'success_vs_rolling_7day\'] = df[\'success_rate\'] / df[\'rolling_7day_avg_success\'].replace(0, 0.5)\n        df[\'volume_vs_rolling_7day\'] = df[\'total\'] / df[\'rolling_7day_avg_volume\'].replace(0, 10)\n        \n        # FEATURE 5-8: SHORT-TERM ROLLING PERFORMANCE\n        df[\'success_ma_1h\'] = df[\'success_rate\'].rolling(4, min_periods=1).mean()\n        df[\'success_ma_3h\'] = df[\'success_rate\'].rolling(12, min_periods=1).mean()\n        df[\'volume_ma_3h\'] = df[\'total\'].rolling(12, min_periods=1).mean()\n        \n        df[\'success_vs_1h_avg\'] = (df[\'success_rate\'] / df[\'success_ma_1h\'].replace(0, 1)).fillna(1)\n        df[\'volume_vs_3h_avg\'] = (df[\'total\'] / df[\'volume_ma_3h\'].replace(0, 1)).fillna(1)\n        \n        # Week-over-week comparison\n        df[\'success_4p_7days_ago\'] = df[\'success_rate_from_4p\'].shift(168)  # 7 days ago\n        df[\'success_vs_7days_ago\'] = (df[\'success_rate_from_4p\'] / df[\'success_4p_7days_ago\'].replace(0, 1)).fillna(1)\n        \n        # FEATURE 9-12: VOLATILITY & MOMENTUM\n        df[\'success_volatility_3h\'] = df[\'success_rate\'].rolling(12, min_periods=2).std().fillna(0)\n        df[\'volume_volatility_3h\'] = df[\'total\'].rolling(12, min_periods=2).std().fillna(0)\n        df[\'success_trend_3h\'] = df[\'success_rate\'].rolling(12, min_periods=3).apply(\n            lambda x: np.polyfit(range(len(x)), x, 1)[0] if len(x) >= 3 else 0, raw=False\n        ).fillna(0)\n        df[\'volume_momentum_1h\'] = df[\'total\'].pct_change(periods=4).fillna(0)\n        \n        # Clean extreme values for rolling features\n        rolling_features = [\'success_vs_rolling_expected\', \'volume_vs_rolling_expected\', \n                           \'success_vs_rolling_7day\', \'volume_vs_rolling_7day\']\n        for feature in rolling_features:\n            df[feature] = np.clip(df[feature], 0.1, 5.0)\n        \n        # Clean all numeric data\n        numeric_cols = df.select_dtypes(include=[np.number]).columns\n        exclude_cols = [\'hour\', \'day_of_week\', \'hour_of_day\', \'hour_of_week\']\n        for col in numeric_cols:\n            if col not in exclude_cols:\n                df[col] = df[col].fillna(df[col].median() if df[col].median() > 0 else 1.0)\n                df[col] = df[col].replace([np.inf, -np.inf], 1.0)\n        \n        return df\n    \n    def predict(self, instances):\n        """Predict rolling anomalies - returns only most recent (excluding max hour)."""\n        platform_provider = instances.get("platform_provider")\n        \n        if not platform_provider or platform_provider not in self._models:\n            return {"error": f"Platform {platform_provider} not available. Available: {list(self._models.keys())}"}\n        \n        # Convert to DataFrame\n        raw_data = instances["instances"]\n        df = pd.DataFrame(raw_data)\n        \n        # Validate required fields\n        required_fields = ["approved", "total", "hour"]\n        if not all(field in df.columns for field in required_fields):\n            return {"error": f"Missing required fields: {required_fields}"}\n        \n        # Sort by hour and remove max hour (most recent timestamp)\n        df[\'hour\'] = pd.to_datetime(df[\'hour\'])\n        df = df.sort_values(\'hour\')\n        \n        # Remove the max hour (most recent record)\n        max_hour = df[\'hour\'].max()\n        df_filtered = df[df[\'hour\'] < max_hour].copy()\n        \n        if len(df_filtered) == 0:\n            return {"error": "No data available after excluding max hour"}\n        \n        # Need sufficient data for rolling calculations (at least 24 hours)\n        if len(df_filtered) < 96:\n            return {"error": f"Insufficient data for rolling calculations. Need ≥96 records, got {len(df_filtered)}"}\n        \n        # Engineer rolling features on ALL filtered data\n        df_features = self._engineer_rolling_features(df_filtered, platform_provider)\n        \n        # Get most recent record AFTER feature engineering\n        latest_record = df_features.iloc[-1:].copy()\n        \n        # Extract the 12 rolling ML features in correct order\n        rolling_features = self._config["features"]\n        X = latest_record[rolling_features].values\n        \n        # Handle inf/nan (double check)\n        X = np.nan_to_num(X, nan=1.0, posinf=1.0, neginf=1.0)\n        \n        # Scale and predict\n        X_scaled = self._scalers[platform_provider].transform(X)\n        model = self._models[platform_provider]\n        prediction = model.predict(X_scaled)[0]\n        score = model.decision_function(X_scaled)[0]\n        \n        # Get contamination rate for context\n        contamination_rate = self._config["contamination_rates"].get(platform_provider, 0.005)\n        \n        # Extract rolling feature values for debugging\n        rolling_feature_values = {feature: float(latest_record[feature].iloc[0]) for feature in rolling_features}\n        \n        # Additional context from rolling calculations\n        hour_of_week = latest_record[\'hour_of_week\'].iloc[0]\n        rolling_context = {\n            "hour_of_week": int(hour_of_week),\n            "hour_of_week_success_factor": float(latest_record[\'hour_of_week_success_factor\'].iloc[0]),\n            "hour_of_week_volume_factor": float(latest_record[\'hour_of_week_volume_factor\'].iloc[0]),\n            "rolling_7day_periods_available": int((~latest_record[\'rolling_7day_avg_success\'].isna()).sum()),\n            "same_hour_periods_available": int((~latest_record[\'rolling_same_hour_success\'].isna()).sum())\n        }\n        \n        return {\n            "platform": platform_provider,\n            "is_anomaly": bool(prediction == -1),\n            "anomaly_score": float(score),\n            "confidence": float(abs(score)),\n            "contamination_rate": float(contamination_rate),\n            "prediction_timestamp": str(latest_record[\'hour\'].iloc[0]),\n            "records_analyzed": len(df_filtered),\n            "max_hour_excluded": str(max_hour),\n            "rolling_feature_values": rolling_feature_values,\n            "rolling_context": rolling_context,\n            "model_type": "rolling_7day_hour_of_week",\n            "features_count": len(rolling_features)\n        }\n')


# In[23]:


get_ipython().run_cell_magic('writefile', 'instances.json', '\n{\n    "platform_provider": "PAYSAFE_CARD",\n    "instances": [\n        {"approved": 772, "total": 999, "hour": "2025-07-25T22:15:00"},\n        {"approved": 854, "total": 1150, "hour": "2025-07-25T22:30:00"},\n        {"approved": 794, "total": 1076, "hour": "2025-07-25T22:45:00"},\n        {"approved": 843, "total": 1087, "hour": "2025-07-25T23:00:00"},\n        {"approved": 777, "total": 1048, "hour": "2025-07-25T23:15:00"},\n        {"approved": 877, "total": 1092, "hour": "2025-07-25T23:30:00"},\n        {"approved": 901, "total": 1121, "hour": "2025-07-25T23:45:00"},\n        {"approved": 876, "total": 1109, "hour": "2025-07-26T00:00:00"},\n        {"approved": 954, "total": 1212, "hour": "2025-07-26T00:15:00"},\n        {"approved": 965, "total": 1273, "hour": "2025-07-26T00:30:00"},\n        {"approved": 1002, "total": 1303, "hour": "2025-07-26T00:45:00"},\n        {"approved": 972, "total": 1222, "hour": "2025-07-26T01:00:00"},\n        {"approved": 1021, "total": 1300, "hour": "2025-07-26T01:15:00"},\n        {"approved": 1020, "total": 1347, "hour": "2025-07-26T01:30:00"},\n        {"approved": 963, "total": 1233, "hour": "2025-07-26T01:45:00"},\n        {"approved": 1032, "total": 1350, "hour": "2025-07-26T02:00:00"},\n        {"approved": 1038, "total": 1373, "hour": "2025-07-26T02:15:00"},\n        {"approved": 1067, "total": 1393, "hour": "2025-07-26T02:30:00"},\n        {"approved": 995, "total": 1320, "hour": "2025-07-26T02:45:00"},\n        {"approved": 1011, "total": 1332, "hour": "2025-07-26T03:00:00"},\n        {"approved": 1026, "total": 1354, "hour": "2025-07-26T03:15:00"},\n        {"approved": 1019, "total": 1346, "hour": "2025-07-26T03:30:00"},\n        {"approved": 1067, "total": 1435, "hour": "2025-07-26T03:45:00"},\n        {"approved": 1038, "total": 1435, "hour": "2025-07-26T04:00:00"},\n        {"approved": 1023, "total": 1367, "hour": "2025-07-26T04:15:00"},\n        {"approved": 977, "total": 1304, "hour": "2025-07-26T04:30:00"},\n        {"approved": 897, "total": 1206, "hour": "2025-07-26T04:45:00"},\n        {"approved": 837, "total": 1086, "hour": "2025-07-26T05:00:00"},\n        {"approved": 832, "total": 1078, "hour": "2025-07-26T05:15:00"},\n        {"approved": 837, "total": 1175, "hour": "2025-07-26T05:30:00"},\n        {"approved": 756, "total": 996, "hour": "2025-07-26T05:45:00"},\n        {"approved": 797, "total": 1079, "hour": "2025-07-26T06:00:00"},\n        {"approved": 635, "total": 913, "hour": "2025-07-26T06:15:00"},\n        {"approved": 678, "total": 941, "hour": "2025-07-26T06:30:00"},\n        {"approved": 583, "total": 825, "hour": "2025-07-26T06:45:00"},\n        {"approved": 583, "total": 789, "hour": "2025-07-26T07:00:00"},\n        {"approved": 453, "total": 685, "hour": "2025-07-26T07:15:00"},\n        {"approved": 472, "total": 658, "hour": "2025-07-26T07:30:00"},\n        {"approved": 477, "total": 699, "hour": "2025-07-26T07:45:00"},\n        {"approved": 433, "total": 623, "hour": "2025-07-26T08:00:00"},\n        {"approved": 407, "total": 576, "hour": "2025-07-26T08:15:00"},\n        {"approved": 483, "total": 700, "hour": "2025-07-26T08:30:00"},\n        {"approved": 404, "total": 595, "hour": "2025-07-26T08:45:00"},\n        {"approved": 425, "total": 592, "hour": "2025-07-26T09:00:00"},\n        {"approved": 407, "total": 579, "hour": "2025-07-26T09:15:00"},\n        {"approved": 432, "total": 570, "hour": "2025-07-26T09:30:00"},\n        {"approved": 415, "total": 562, "hour": "2025-07-26T09:45:00"},\n        {"approved": 397, "total": 555, "hour": "2025-07-26T10:00:00"},\n        {"approved": 414, "total": 577, "hour": "2025-07-26T10:15:00"},\n        {"approved": 383, "total": 518, "hour": "2025-07-26T10:30:00"},\n        {"approved": 409, "total": 555, "hour": "2025-07-26T10:45:00"},\n        {"approved": 432, "total": 555, "hour": "2025-07-26T11:00:00"},\n        {"approved": 483, "total": 621, "hour": "2025-07-26T11:15:00"},\n        {"approved": 464, "total": 632, "hour": "2025-07-26T11:30:00"},\n        {"approved": 460, "total": 640, "hour": "2025-07-26T11:45:00"},\n        {"approved": 467, "total": 591, "hour": "2025-07-26T12:00:00"},\n        {"approved": 435, "total": 579, "hour": "2025-07-26T12:15:00"},\n        {"approved": 452, "total": 619, "hour": "2025-07-26T12:30:00"},\n        {"approved": 455, "total": 667, "hour": "2025-07-26T12:45:00"},\n        {"approved": 456, "total": 606, "hour": "2025-07-26T13:00:00"},\n        {"approved": 449, "total": 612, "hour": "2025-07-26T13:15:00"},\n        {"approved": 499, "total": 642, "hour": "2025-07-26T13:30:00"},\n        {"approved": 557, "total": 756, "hour": "2025-07-26T13:45:00"},\n        {"approved": 534, "total": 692, "hour": "2025-07-26T14:00:00"},\n        {"approved": 585, "total": 749, "hour": "2025-07-26T14:15:00"},\n        {"approved": 564, "total": 738, "hour": "2025-07-26T14:30:00"},\n        {"approved": 597, "total": 767, "hour": "2025-07-26T14:45:00"},\n        {"approved": 606, "total": 814, "hour": "2025-07-26T15:00:00"},\n        {"approved": 598, "total": 777, "hour": "2025-07-26T15:15:00"},\n        {"approved": 553, "total": 712, "hour": "2025-07-26T15:30:00"},\n        {"approved": 563, "total": 776, "hour": "2025-07-26T15:45:00"},\n        {"approved": 563, "total": 778, "hour": "2025-07-26T16:00:00"},\n        {"approved": 615, "total": 819, "hour": "2025-07-26T16:15:00"},\n        {"approved": 606, "total": 781, "hour": "2025-07-26T16:30:00"},\n        {"approved": 692, "total": 894, "hour": "2025-07-26T16:45:00"},\n        {"approved": 727, "total": 964, "hour": "2025-07-26T17:00:00"},\n        {"approved": 681, "total": 892, "hour": "2025-07-26T17:15:00"},\n        {"approved": 686, "total": 889, "hour": "2025-07-26T17:30:00"},\n        {"approved": 877, "total": 1155, "hour": "2025-07-26T17:45:00"},\n        {"approved": 769, "total": 1023, "hour": "2025-07-26T18:00:00"},\n        {"approved": 789, "total": 1009, "hour": "2025-07-26T18:15:00"},\n        {"approved": 760, "total": 1008, "hour": "2025-07-26T18:30:00"},\n        {"approved": 698, "total": 916, "hour": "2025-07-26T18:45:00"},\n        {"approved": 709, "total": 945, "hour": "2025-07-26T19:00:00"},\n        {"approved": 719, "total": 901, "hour": "2025-07-26T19:15:00"},\n        {"approved": 750, "total": 978, "hour": "2025-07-26T19:30:00"},\n        {"approved": 708, "total": 965, "hour": "2025-07-26T19:45:00"},\n        {"approved": 754, "total": 954, "hour": "2025-07-26T20:00:00"},\n        {"approved": 760, "total": 956, "hour": "2025-07-26T20:15:00"},\n        {"approved": 768, "total": 1031, "hour": "2025-07-26T20:30:00"},\n        {"approved": 738, "total": 980, "hour": "2025-07-26T20:45:00"},\n        {"approved": 811, "total": 1045, "hour": "2025-07-26T21:00:00"},\n        {"approved": 776, "total": 1026, "hour": "2025-07-26T21:15:00"},\n        {"approved": 792, "total": 1017, "hour": "2025-07-26T21:30:00"},\n        {"approved": 814, "total": 1037, "hour": "2025-07-26T21:45:00"},\n        {"approved": 862, "total": 1104, "hour": "2025-07-26T22:00:00"},\n        {"approved": 833, "total": 1069, "hour": "2025-07-26T22:15:00"},\n        {"approved": 875, "total": 1189, "hour": "2025-07-26T22:30:00"},\n        {"approved": 912, "total": 1181, "hour": "2025-07-26T22:45:00"},\n        {"approved": 986, "total": 1258, "hour": "2025-07-26T23:00:00"},\n        {"approved": 947, "total": 1284, "hour": "2025-07-26T23:15:00"},\n        {"approved": 938, "total": 1224, "hour": "2025-07-26T23:30:00"},\n        {"approved": 1008, "total": 1269, "hour": "2025-07-26T23:45:00"},\n        {"approved": 961, "total": 1252, "hour": "2025-07-27T00:00:00"},\n        {"approved": 942, "total": 1249, "hour": "2025-07-27T00:15:00"},\n        {"approved": 1027, "total": 1267, "hour": "2025-07-27T00:30:00"},\n        {"approved": 938, "total": 1192, "hour": "2025-07-27T00:45:00"},\n        {"approved": 956, "total": 1223, "hour": "2025-07-27T01:00:00"},\n        {"approved": 1047, "total": 1318, "hour": "2025-07-27T01:15:00"},\n        {"approved": 1047, "total": 1371, "hour": "2025-07-27T01:30:00"},\n        {"approved": 1031, "total": 1321, "hour": "2025-07-27T01:45:00"},\n        {"approved": 1047, "total": 1361, "hour": "2025-07-27T02:00:00"},\n        {"approved": 1079, "total": 1400, "hour": "2025-07-27T02:15:00"},\n        {"approved": 1126, "total": 1441, "hour": "2025-07-27T02:30:00"},\n        {"approved": 1137, "total": 1458, "hour": "2025-07-27T02:45:00"},\n        {"approved": 1199, "total": 1525, "hour": "2025-07-27T03:00:00"},\n        {"approved": 1168, "total": 1479, "hour": "2025-07-27T03:15:00"},\n        {"approved": 1168, "total": 1473, "hour": "2025-07-27T03:30:00"},\n        {"approved": 1161, "total": 1500, "hour": "2025-07-27T03:45:00"},\n        {"approved": 1144, "total": 1495, "hour": "2025-07-27T04:00:00"},\n        {"approved": 1158, "total": 1554, "hour": "2025-07-27T04:15:00"},\n        {"approved": 1084, "total": 1413, "hour": "2025-07-27T04:30:00"},\n        {"approved": 1455, "total": 1455, "hour": "2025-07-27T04:45:00"},\n        {"approved": 1411, "total": 1411, "hour": "2025-07-27T05:00:00"},\n        {"approved": 1361, "total": 1361, "hour": "2025-07-27T05:15:00"},\n        {"approved": 1412, "total": 1412, "hour": "2025-07-27T05:30:00"},\n        {"approved": 1347, "total": 1347, "hour": "2025-07-27T05:45:00"},\n        {"approved": 1266, "total": 1266, "hour": "2025-07-27T06:00:00"},\n        {"approved": 1205, "total": 1205, "hour": "2025-07-27T06:15:00"},\n        {"approved": 1076, "total": 1076, "hour": "2025-07-27T06:30:00"},\n        {"approved": 1032, "total": 1032, "hour": "2025-07-27T06:45:00"},\n        {"approved": 969, "total": 969, "hour": "2025-07-27T07:00:00"},\n        {"approved": 943, "total": 943, "hour": "2025-07-27T07:15:00"},\n        {"approved": 922, "total": 922, "hour": "2025-07-27T07:30:00"},\n        {"approved": 764, "total": 764, "hour": "2025-07-27T07:45:00"},\n        {"approved": 814, "total": 814, "hour": "2025-07-27T08:00:00"},\n        {"approved": 785, "total": 785, "hour": "2025-07-27T08:15:00"},\n        {"approved": 745, "total": 745, "hour": "2025-07-27T08:30:00"},\n        {"approved": 733, "total": 733, "hour": "2025-07-27T08:45:00"},\n        {"approved": 757, "total": 757, "hour": "2025-07-27T09:00:00"},\n        {"approved": 602, "total": 602, "hour": "2025-07-27T09:15:00"},\n        {"approved": 641, "total": 641, "hour": "2025-07-27T09:30:00"},\n        {"approved": 671, "total": 671, "hour": "2025-07-27T09:45:00"},\n        {"approved": 665, "total": 665, "hour": "2025-07-27T10:00:00"},\n        {"approved": 632, "total": 632, "hour": "2025-07-27T10:15:00"},\n        {"approved": 616, "total": 616, "hour": "2025-07-27T10:30:00"},\n        {"approved": 555, "total": 555, "hour": "2025-07-27T10:45:00"},\n        {"approved": 555, "total": 555, "hour": "2025-07-27T11:00:00"},\n        {"approved": 621, "total": 621, "hour": "2025-07-27T11:15:00"},\n        {"approved": 632, "total": 632, "hour": "2025-07-27T11:30:00"},\n        {"approved": 640, "total": 640, "hour": "2025-07-27T11:45:00"},\n        {"approved": 591, "total": 591, "hour": "2025-07-27T12:00:00"},\n        {"approved": 579, "total": 579, "hour": "2025-07-27T12:15:00"},\n        {"approved": 619, "total": 619, "hour": "2025-07-27T12:30:00"},\n        {"approved": 667, "total": 667, "hour": "2025-07-27T12:45:00"},\n        {"approved": 606, "total": 606, "hour": "2025-07-27T13:00:00"},\n        {"approved": 612, "total": 612, "hour": "2025-07-27T13:15:00"},\n        {"approved": 642, "total": 642, "hour": "2025-07-27T13:30:00"},\n        {"approved": 756, "total": 756, "hour": "2025-07-27T13:45:00"},\n        {"approved": 692, "total": 692, "hour": "2025-07-27T14:00:00"},\n        {"approved": 749, "total": 749, "hour": "2025-07-27T14:15:00"},\n        {"approved": 738, "total": 738, "hour": "2025-07-27T14:30:00"},\n        {"approved": 767, "total": 767, "hour": "2025-07-27T14:45:00"},\n        {"approved": 814, "total": 814, "hour": "2025-07-27T15:00:00"},\n        {"approved": 777, "total": 777, "hour": "2025-07-27T15:15:00"},\n        {"approved": 712, "total": 712, "hour": "2025-07-27T15:30:00"},\n        {"approved": 776, "total": 776, "hour": "2025-07-27T15:45:00"},\n        {"approved": 778, "total": 778, "hour": "2025-07-27T16:00:00"},\n        {"approved": 819, "total": 819, "hour": "2025-07-27T16:15:00"},\n        {"approved": 781, "total": 781, "hour": "2025-07-27T16:30:00"},\n        {"approved": 894, "total": 894, "hour": "2025-07-27T16:45:00"},\n        {"approved": 964, "total": 964, "hour": "2025-07-27T17:00:00"},\n        {"approved": 892, "total": 892, "hour": "2025-07-27T17:15:00"},\n        {"approved": 889, "total": 889, "hour": "2025-07-27T17:30:00"},\n        {"approved": 1155, "total": 1155, "hour": "2025-07-27T17:45:00"},\n        {"approved": 1023, "total": 1023, "hour": "2025-07-27T18:00:00"},\n        {"approved": 1009, "total": 1009, "hour": "2025-07-27T18:15:00"},\n        {"approved": 1008, "total": 1008, "hour": "2025-07-27T18:30:00"},\n        {"approved": 916, "total": 916, "hour": "2025-07-27T18:45:00"},\n        {"approved": 945, "total": 945, "hour": "2025-07-27T19:00:00"},\n        {"approved": 901, "total": 901, "hour": "2025-07-27T19:15:00"},\n        {"approved": 978, "total": 978, "hour": "2025-07-27T19:30:00"},\n        {"approved": 965, "total": 965, "hour": "2025-07-27T19:45:00"},\n        {"approved": 954, "total": 954, "hour": "2025-07-27T20:00:00"},\n        {"approved": 956, "total": 956, "hour": "2025-07-27T20:15:00"},\n        {"approved": 1031, "total": 1031, "hour": "2025-07-27T20:30:00"},\n        {"approved": 980, "total": 980, "hour": "2025-07-27T20:45:00"},\n        {"approved": 1045, "total": 1045, "hour": "2025-07-27T21:00:00"},\n        {"approved": 1026, "total": 1026, "hour": "2025-07-27T21:15:00"},\n        {"approved": 1017, "total": 1017, "hour": "2025-07-27T21:30:00"},\n        {"approved": 1037, "total": 1037, "hour": "2025-07-27T21:45:00"},\n        {"approved": 1104, "total": 1104, "hour": "2025-07-27T22:00:00"},\n        {"approved": 1069, "total": 1069, "hour": "2025-07-27T22:15:00"},\n        {"approved": 1189, "total": 1189, "hour": "2025-07-27T22:30:00"},\n        {"approved": 1181, "total": 1181, "hour": "2025-07-27T22:45:00"},\n        {"approved": 1258, "total": 1258, "hour": "2025-07-27T23:00:00"},\n        {"approved": 1284, "total": 1284, "hour": "2025-07-27T23:15:00"},\n        {"approved": 1224, "total": 1224, "hour": "2025-07-27T23:30:00"},\n        {"approved": 1269, "total": 1269, "hour": "2025-07-27T23:45:00"},\n        {"approved": 1252, "total": 1252, "hour": "2025-07-28T00:00:00"},\n        {"approved": 1249, "total": 1249, "hour": "2025-07-28T00:15:00"},\n        {"approved": 1267, "total": 1267, "hour": "2025-07-28T00:30:00"},\n        {"approved": 1192, "total": 1192, "hour": "2025-07-28T00:45:00"},\n        {"approved": 1223, "total": 1223, "hour": "2025-07-28T01:00:00"},\n        {"approved": 1318, "total": 1318, "hour": "2025-07-28T01:15:00"},\n        {"approved": 1371, "total": 1371, "hour": "2025-07-28T01:30:00"},\n        {"approved": 1321, "total": 1321, "hour": "2025-07-28T01:45:00"},\n        {"approved": 1361, "total": 1361, "hour": "2025-07-28T02:00:00"},\n        {"approved": 1400, "total": 1400, "hour": "2025-07-28T02:15:00"},\n        {"approved": 1441, "total": 1441, "hour": "2025-07-28T02:30:00"},\n        {"approved": 1458, "total": 1458, "hour": "2025-07-28T02:45:00"},\n        {"approved": 1525, "total": 1525, "hour": "2025-07-28T03:00:00"},\n        {"approved": 1479, "total": 1479, "hour": "2025-07-28T03:15:00"},\n        {"approved": 1473, "total": 1473, "hour": "2025-07-28T03:30:00"},\n        {"approved": 1500, "total": 1500, "hour": "2025-07-28T03:45:00"},\n        {"approved": 1495, "total": 1495, "hour": "2025-07-28T04:00:00"},\n        {"approved": 1554, "total": 1554, "hour": "2025-07-28T04:15:00"},\n        {"approved": 1413, "total": 1413, "hour": "2025-07-28T04:30:00"},\n        {"approved": 1343, "total": 1343, "hour": "2025-07-28T04:45:00"},\n        {"approved": 1318, "total": 1318, "hour": "2025-07-28T05:00:00"},\n        {"approved": 1361, "total": 1361, "hour": "2025-07-28T05:15:00"},\n        {"approved": 1412, "total": 1412, "hour": "2025-07-28T05:30:00"},\n        {"approved": 1347, "total": 1347, "hour": "2025-07-28T05:45:00"},\n        {"approved": 1266, "total": 1266, "hour": "2025-07-28T06:00:00"},\n        {"approved": 1205, "total": 1205, "hour": "2025-07-28T06:15:00"},\n        {"approved": 1076, "total": 1076, "hour": "2025-07-28T06:30:00"},\n        {"approved": 1032, "total": 1032, "hour": "2025-07-28T06:45:00"},\n        {"approved": 969, "total": 969, "hour": "2025-07-28T07:00:00"},\n        {"approved": 943, "total": 943, "hour": "2025-07-28T07:15:00"},\n        {"approved": 922, "total": 922, "hour": "2025-07-28T07:30:00"},\n        {"approved": 764, "total": 764, "hour": "2025-07-28T07:45:00"},\n        {"approved": 814, "total": 814, "hour": "2025-07-28T08:00:00"},\n        {"approved": 785, "total": 785, "hour": "2025-07-28T08:15:00"},\n        {"approved": 745, "total": 745, "hour": "2025-07-28T08:30:00"},\n        {"approved": 733, "total": 733, "hour": "2025-07-28T08:45:00"},\n        {"approved": 757, "total": 757, "hour": "2025-07-28T09:00:00"},\n        {"approved": 602, "total": 602, "hour": "2025-07-28T09:15:00"},\n        {"approved": 641, "total": 641, "hour": "2025-07-28T09:30:00"},\n        {"approved": 671, "total": 671, "hour": "2025-07-28T09:45:00"},\n        {"approved": 665, "total": 665, "hour": "2025-07-28T10:00:00"},\n        {"approved": 632, "total": 632, "hour": "2025-07-28T10:15:00"},\n        {"approved": 616, "total": 616, "hour": "2025-07-28T10:30:00"},\n        {"approved": 555, "total": 555, "hour": "2025-07-28T10:45:00"},\n        {"approved": 555, "total": 555, "hour": "2025-07-28T11:00:00"},\n        {"approved": 621, "total": 621, "hour": "2025-07-28T11:15:00"},\n        {"approved": 632, "total": 632, "hour": "2025-07-28T11:30:00"},\n        {"approved": 640, "total": 640, "hour": "2025-07-28T11:45:00"},\n        {"approved": 591, "total": 591, "hour": "2025-07-28T12:00:00"},\n        {"approved": 579, "total": 579, "hour": "2025-07-28T12:15:00"},\n        {"approved": 619, "total": 619, "hour": "2025-07-28T12:30:00"},\n        {"approved": 667, "total": 667, "hour": "2025-07-28T12:45:00"},\n        {"approved": 606, "total": 606, "hour": "2025-07-28T13:00:00"},\n        {"approved": 612, "total": 612, "hour": "2025-07-28T13:15:00"},\n        {"approved": 642, "total": 642, "hour": "2025-07-28T13:30:00"},\n        {"approved": 756, "total": 756, "hour": "2025-07-28T13:45:00"},\n        {"approved": 692, "total": 692, "hour": "2025-07-28T14:00:00"},\n        {"approved": 749, "total": 749, "hour": "2025-07-28T14:15:00"},\n        {"approved": 738, "total": 738, "hour": "2025-07-28T14:30:00"},\n        {"approved": 767, "total": 767, "hour": "2025-07-28T14:45:00"},\n        {"approved": 814, "total": 814, "hour": "2025-07-28T15:00:00"},\n        {"approved": 777, "total": 777, "hour": "2025-07-28T15:15:00"},\n        {"approved": 712, "total": 712, "hour": "2025-07-28T15:30:00"},\n        {"approved": 776, "total": 776, "hour": "2025-07-28T15:45:00"},\n        {"approved": 778, "total": 778, "hour": "2025-07-28T16:00:00"},\n        {"approved": 819, "total": 819, "hour": "2025-07-28T16:15:00"},\n        {"approved": 781, "total": 781, "hour": "2025-07-28T16:30:00"},\n        {"approved": 894, "total": 894, "hour": "2025-07-28T16:45:00"},\n        {"approved": 964, "total": 964, "hour": "2025-07-28T17:00:00"},\n        {"approved": 892, "total": 892, "hour": "2025-07-28T17:15:00"},\n        {"approved": 889, "total": 889, "hour": "2025-07-28T17:30:00"},\n        {"approved": 1155, "total": 1155, "hour": "2025-07-28T17:45:00"},\n        {"approved": 1023, "total": 1023, "hour": "2025-07-28T18:00:00"},\n        {"approved": 1009, "total": 1009, "hour": "2025-07-28T18:15:00"},\n        {"approved": 1008, "total": 1008, "hour": "2025-07-28T18:30:00"},\n        {"approved": 916, "total": 916, "hour": "2025-07-28T18:45:00"},\n        {"approved": 945, "total": 945, "hour": "2025-07-28T19:00:00"},\n        {"approved": 901, "total": 901, "hour": "2025-07-28T19:15:00"},\n        {"approved": 978, "total": 978, "hour": "2025-07-28T19:30:00"},\n        {"approved": 965, "total": 965, "hour": "2025-07-28T19:45:00"},\n        {"approved": 954, "total": 954, "hour": "2025-07-28T20:00:00"},\n        {"approved": 956, "total": 956, "hour": "2025-07-28T20:15:00"},\n        {"approved": 1031, "total": 1031, "hour": "2025-07-28T20:30:00"},\n        {"approved": 980, "total": 980, "hour": "2025-07-28T20:45:00"},\n        {"approved": 1045, "total": 1045, "hour": "2025-07-28T21:00:00"},\n        {"approved": 1026, "total": 1026, "hour": "2025-07-28T21:15:00"},\n        {"approved": 1017, "total": 1017, "hour": "2025-07-28T21:30:00"},\n        {"approved": 1037, "total": 1037, "hour": "2025-07-28T21:45:00"},\n        {"approved": 1104, "total": 1104, "hour": "2025-07-28T22:00:00"},\n        {"approved": 1069, "total": 1069, "hour": "2025-07-28T22:15:00"},\n        {"approved": 1189, "total": 1189, "hour": "2025-07-28T22:30:00"},\n        {"approved": 1181, "total": 1181, "hour": "2025-07-28T22:45:00"},\n        {"approved": 1258, "total": 1258, "hour": "2025-07-28T23:00:00"},\n        {"approved": 1284, "total": 1284, "hour": "2025-07-28T23:15:00"},\n        {"approved": 1224, "total": 1224, "hour": "2025-07-28T23:30:00"},\n        {"approved": 1269, "total": 1269, "hour": "2025-07-28T23:45:00"},\n        {"approved": 1252, "total": 1252, "hour": "2025-07-29T00:00:00"},\n        {"approved": 1249, "total": 1249, "hour": "2025-07-29T00:15:00"},\n        {"approved": 1267, "total": 1267, "hour": "2025-07-29T00:30:00"},\n        {"approved": 1192, "total": 1192, "hour": "2025-07-29T00:45:00"},\n        {"approved": 1223, "total": 1223, "hour": "2025-07-29T01:00:00"},\n        {"approved": 1318, "total": 1318, "hour": "2025-07-29T01:15:00"},\n        {"approved": 1371, "total": 1371, "hour": "2025-07-29T01:30:00"},\n        {"approved": 1321, "total": 1321, "hour": "2025-07-29T01:45:00"},\n        {"approved": 1361, "total": 1361, "hour": "2025-07-29T02:00:00"},\n        {"approved": 1400, "total": 1400, "hour": "2025-07-29T02:15:00"},\n        {"approved": 1441, "total": 1441, "hour": "2025-07-29T02:30:00"},\n        {"approved": 1458, "total": 1458, "hour": "2025-07-29T02:45:00"},\n        {"approved": 1525, "total": 1525, "hour": "2025-07-29T03:00:00"},\n        {"approved": 1479, "total": 1479, "hour": "2025-07-29T03:15:00"},\n        {"approved": 1473, "total": 1473, "hour": "2025-07-29T03:30:00"},\n        {"approved": 1500, "total": 1500, "hour": "2025-07-29T03:45:00"},\n        {"approved": 1495, "total": 1495, "hour": "2025-07-29T04:00:00"},\n        {"approved": 1554, "total": 1554, "hour": "2025-07-29T04:15:00"},\n        {"approved": 1413, "total": 1413, "hour": "2025-07-29T04:30:00"},\n        {"approved": 1036, "total": 1343, "hour": "2025-07-29T04:45:00"},\n        {"approved": 983, "total": 1318, "hour": "2025-07-29T05:00:00"},\n        {"approved": 1019, "total": 1361, "hour": "2025-07-29T05:15:00"},\n        {"approved": 1032, "total": 1412, "hour": "2025-07-29T05:30:00"},\n        {"approved": 987, "total": 1347, "hour": "2025-07-29T05:45:00"},\n        {"approved": 923, "total": 1266, "hour": "2025-07-29T06:00:00"},\n        {"approved": 872, "total": 1205, "hour": "2025-07-29T06:15:00"},\n        {"approved": 785, "total": 1076, "hour": "2025-07-29T06:30:00"},\n        {"approved": 745, "total": 1032, "hour": "2025-07-29T06:45:00"},\n        {"approved": 692, "total": 969, "hour": "2025-07-29T07:00:00"},\n        {"approved": 673, "total": 943, "hour": "2025-07-29T07:15:00"},\n        {"approved": 640, "total": 922, "hour": "2025-07-29T07:30:00"},\n        {"approved": 550, "total": 764, "hour": "2025-07-29T07:45:00"},\n        {"approved": 560, "total": 814, "hour": "2025-07-29T08:00:00"},\n        {"approved": 563, "total": 785, "hour": "2025-07-29T08:15:00"},\n        {"approved": 546, "total": 745, "hour": "2025-07-29T08:30:00"},\n        {"approved": 502, "total": 733, "hour": "2025-07-29T08:45:00"},\n        {"approved": 491, "total": 757, "hour": "2025-07-29T09:00:00"},\n        {"approved": 413, "total": 602, "hour": "2025-07-29T09:15:00"},\n        {"approved": 437, "total": 641, "hour": "2025-07-29T09:30:00"},\n        {"approved": 489, "total": 671, "hour": "2025-07-29T09:45:00"},\n        {"approved": 433, "total": 665, "hour": "2025-07-29T10:00:00"},\n        {"approved": 477, "total": 632, "hour": "2025-07-29T10:15:00"},\n        {"approved": 433, "total": 616, "hour": "2025-07-29T10:30:00"},\n        {"approved": 439, "total": 555, "hour": "2025-07-29T10:45:00"},\n        {"approved": 382, "total": 555, "hour": "2025-07-29T11:00:00"},\n        {"approved": 477, "total": 621, "hour": "2025-07-29T11:15:00"},\n        {"approved": 491, "total": 632, "hour": "2025-07-29T11:30:00"},\n        {"approved": 408, "total": 640, "hour": "2025-07-29T11:45:00"},\n        {"approved": 402, "total": 591, "hour": "2025-07-29T12:00:00"},\n        {"approved": 450, "total": 579, "hour": "2025-07-29T12:15:00"},\n        {"approved": 465, "total": 619, "hour": "2025-07-29T12:30:00"},\n        {"approved": 420, "total": 667, "hour": "2025-07-29T12:45:00"},\n        {"approved": 445, "total": 606, "hour": "2025-07-29T13:00:00"},\n        {"approved": 464, "total": 612, "hour": "2025-07-29T13:15:00"},\n        {"approved": 518, "total": 642, "hour": "2025-07-29T13:30:00"},\n        {"approved": 479, "total": 756, "hour": "2025-07-29T13:45:00"},\n        {"approved": 573, "total": 692, "hour": "2025-07-29T14:00:00"},\n        {"approved": 468, "total": 749, "hour": "2025-07-29T14:15:00"},\n        {"approved": 537, "total": 738, "hour": "2025-07-29T14:30:00"},\n        {"approved": 552, "total": 767, "hour": "2025-07-29T14:45:00"},\n        {"approved": 562, "total": 814, "hour": "2025-07-29T15:00:00"},\n        {"approved": 555, "total": 777, "hour": "2025-07-29T15:15:00"},\n        {"approved": 544, "total": 712, "hour": "2025-07-29T15:30:00"},\n        {"approved": 537, "total": 776, "hour": "2025-07-29T15:45:00"},\n        {"approved": 641, "total": 778, "hour": "2025-07-29T16:00:00"},\n        {"approved": 617, "total": 819, "hour": "2025-07-29T16:15:00"},\n        {"approved": 700, "total": 781, "hour": "2025-07-29T16:30:00"},\n        {"approved": 687, "total": 894, "hour": "2025-07-29T16:45:00"},\n        {"approved": 692, "total": 964, "hour": "2025-07-29T17:00:00"},\n        {"approved": 733, "total": 892, "hour": "2025-07-29T17:15:00"},\n        {"approved": 859, "total": 889, "hour": "2025-07-29T17:30:00"},\n        {"approved": 712, "total": 1155, "hour": "2025-07-29T17:45:00"},\n        {"approved": 807, "total": 1023, "hour": "2025-07-29T18:00:00"},\n        {"approved": 747, "total": 1009, "hour": "2025-07-29T18:15:00"},\n        {"approved": 734, "total": 1008, "hour": "2025-07-29T18:30:00"},\n        {"approved": 759, "total": 916, "hour": "2025-07-29T18:45:00"},\n        {"approved": 750, "total": 945, "hour": "2025-07-29T19:00:00"},\n        {"approved": 744, "total": 901, "hour": "2025-07-29T19:15:00"},\n        {"approved": 809, "total": 978, "hour": "2025-07-29T19:30:00"},\n        {"approved": 869, "total": 965, "hour": "2025-07-29T19:45:00"},\n        {"approved": 814, "total": 954, "hour": "2025-07-29T20:00:00"},\n        {"approved": 797, "total": 956, "hour": "2025-07-29T20:15:00"},\n        {"approved": 839, "total": 1031, "hour": "2025-07-29T20:30:00"},\n        {"approved": 833, "total": 980, "hour": "2025-07-29T20:45:00"},\n        {"approved": 841, "total": 1045, "hour": "2025-07-29T21:00:00"},\n        {"approved": 858, "total": 1026, "hour": "2025-07-29T21:15:00"},\n        {"approved": 849, "total": 1017, "hour": "2025-07-29T21:30:00"},\n        {"approved": 799, "total": 1037, "hour": "2025-07-29T21:45:00"},\n        {"approved": 898, "total": 1104, "hour": "2025-07-29T22:00:00"},\n        {"approved": 939, "total": 1069, "hour": "2025-07-29T22:15:00"},\n        {"approved": 1039, "total": 1189, "hour": "2025-07-29T22:30:00"},\n        {"approved": 957, "total": 1181, "hour": "2025-07-29T22:45:00"},\n        {"approved": 939, "total": 1258, "hour": "2025-07-29T23:00:00"},\n        {"approved": 944, "total": 1284, "hour": "2025-07-29T23:15:00"},\n        {"approved": 974, "total": 1224, "hour": "2025-07-29T23:30:00"},\n        {"approved": 1014, "total": 1269, "hour": "2025-07-29T23:45:00"},\n        {"approved": 1183, "total": 1475, "hour": "2025-07-30T00:00:00"},\n        {"approved": 1163, "total": 1515, "hour": "2025-07-30T00:15:00"},\n        {"approved": 1112, "total": 1400, "hour": "2025-07-30T00:30:00"},\n        {"approved": 1088, "total": 1446, "hour": "2025-07-30T00:45:00"},\n        {"approved": 974, "total": 1279, "hour": "2025-07-30T01:00:00"},\n        {"approved": 1183, "total": 1495, "hour": "2025-07-30T01:15:00"},\n        {"approved": 1106, "total": 1462, "hour": "2025-07-30T01:30:00"},\n        {"approved": 1205, "total": 1526, "hour": "2025-07-30T01:45:00"},\n        {"approved": 1146, "total": 1483, "hour": "2025-07-30T02:00:00"},\n        {"approved": 1133, "total": 1465, "hour": "2025-07-30T02:15:00"},\n        {"approved": 1129, "total": 1495, "hour": "2025-07-30T02:30:00"},\n        {"approved": 1151, "total": 1521, "hour": "2025-07-30T02:45:00"},\n        {"approved": 1065, "total": 1403, "hour": "2025-07-30T03:00:00"},\n        {"approved": 1032, "total": 1374, "hour": "2025-07-30T03:15:00"},\n        {"approved": 1088, "total": 1435, "hour": "2025-07-30T03:30:00"},\n        {"approved": 998, "total": 1326, "hour": "2025-07-30T03:45:00"},\n        {"approved": 969, "total": 1294, "hour": "2025-07-30T04:00:00"},\n        {"approved": 949, "total": 1271, "hour": "2025-07-30T04:15:00"},\n        {"approved": 952, "total": 1290, "hour": "2025-07-30T04:30:00"},\n        {"approved": 937, "total": 1296, "hour": "2025-07-30T04:45:00"},\n        {"approved": 869, "total": 1147, "hour": "2025-07-30T05:00:00"},\n        {"approved": 923, "total": 1266, "hour": "2025-07-30T05:15:00"},\n        {"approved": 863, "total": 1174, "hour": "2025-07-30T05:30:00"},\n        {"approved": 838, "total": 1132, "hour": "2025-07-30T05:45:00"},\n        {"approved": 756, "total": 1041, "hour": "2025-07-30T06:00:00"},\n        {"approved": 716, "total": 1025, "hour": "2025-07-30T06:15:00"},\n        {"approved": 700, "total": 994, "hour": "2025-07-30T06:30:00"},\n        {"approved": 696, "total": 917, "hour": "2025-07-30T06:45:00"},\n        {"approved": 583, "total": 821, "hour": "2025-07-30T07:00:00"},\n        {"approved": 598, "total": 875, "hour": "2025-07-30T07:15:00"},\n        {"approved": 514, "total": 735, "hour": "2025-07-30T07:30:00"},\n        {"approved": 514, "total": 763, "hour": "2025-07-30T07:45:00"},\n        {"approved": 457, "total": 681, "hour": "2025-07-30T08:00:00"},\n        {"approved": 515, "total": 708, "hour": "2025-07-30T08:15:00"},\n        {"approved": 490, "total": 685, "hour": "2025-07-30T08:30:00"},\n        {"approved": 483, "total": 625, "hour": "2025-07-30T08:45:00"},\n        {"approved": 463, "total": 645, "hour": "2025-07-30T09:00:00"},\n        {"approved": 457, "total": 600, "hour": "2025-07-30T09:15:00"},\n        {"approved": 446, "total": 617, "hour": "2025-07-30T09:30:00"},\n        {"approved": 408, "total": 573, "hour": "2025-07-30T09:45:00"},\n        {"approved": 500, "total": 668, "hour": "2025-07-30T10:00:00"},\n        {"approved": 462, "total": 649, "hour": "2025-07-30T10:15:00"},\n        {"approved": 441, "total": 628, "hour": "2025-07-30T10:30:00"},\n        {"approved": 471, "total": 629, "hour": "2025-07-30T10:45:00"},\n        {"approved": 468, "total": 649, "hour": "2025-07-30T11:00:00"},\n        {"approved": 489, "total": 670, "hour": "2025-07-30T11:15:00"},\n        {"approved": 503, "total": 655, "hour": "2025-07-30T11:30:00"},\n        {"approved": 529, "total": 706, "hour": "2025-07-30T11:45:00"},\n        {"approved": 507, "total": 673, "hour": "2025-07-30T12:00:00"},\n        {"approved": 475, "total": 631, "hour": "2025-07-30T12:15:00"},\n        {"approved": 513, "total": 662, "hour": "2025-07-30T12:30:00"},\n        {"approved": 462, "total": 614, "hour": "2025-07-30T12:45:00"},\n        {"approved": 398, "total": 518, "hour": "2025-07-30T13:00:00"},\n        {"approved": 393, "total": 511, "hour": "2025-07-30T13:15:00"},\n        {"approved": 546, "total": 694, "hour": "2025-07-30T13:30:00"},\n        {"approved": 554, "total": 748, "hour": "2025-07-30T13:45:00"},\n        {"approved": 606, "total": 794, "hour": "2025-07-30T14:00:00"},\n        {"approved": 616, "total": 789, "hour": "2025-07-30T14:15:00"},\n        {"approved": 582, "total": 798, "hour": "2025-07-30T14:30:00"},\n        {"approved": 570, "total": 834, "hour": "2025-07-30T14:45:00"},\n        {"approved": 628, "total": 891, "hour": "2025-07-30T15:00:00"},\n        {"approved": 732, "total": 954, "hour": "2025-07-30T15:15:00"},\n        {"approved": 751, "total": 970, "hour": "2025-07-30T15:30:00"},\n        {"approved": 761, "total": 956, "hour": "2025-07-30T15:45:00"},\n        {"approved": 701, "total": 855, "hour": "2025-07-30T16:00:00"},\n        {"approved": 793, "total": 1022, "hour": "2025-07-30T16:15:00"},\n        {"approved": 723, "total": 928, "hour": "2025-07-30T16:30:00"},\n        {"approved": 786, "total": 973, "hour": "2025-07-30T16:45:00"},\n        {"approved": 832, "total": 1072, "hour": "2025-07-30T17:00:00"},\n        {"approved": 765, "total": 968, "hour": "2025-07-30T17:15:00"},\n        {"approved": 812, "total": 1088, "hour": "2025-07-30T17:30:00"},\n        {"approved": 730, "total": 934, "hour": "2025-07-30T17:45:00"},\n        {"approved": 720, "total": 944, "hour": "2025-07-30T18:00:00"},\n        {"approved": 707, "total": 938, "hour": "2025-07-30T18:15:00"},\n        {"approved": 735, "total": 943, "hour": "2025-07-30T18:30:00"},\n        {"approved": 739, "total": 974, "hour": "2025-07-30T18:45:00"},\n        {"approved": 742, "total": 1006, "hour": "2025-07-30T19:00:00"},\n        {"approved": 725, "total": 948, "hour": "2025-07-30T19:15:00"},\n        {"approved": 793, "total": 1048, "hour": "2025-07-30T19:30:00"},\n        {"approved": 761, "total": 995, "hour": "2025-07-30T19:45:00"},\n        {"approved": 795, "total": 1051, "hour": "2025-07-30T20:00:00"},\n        {"approved": 776, "total": 1025, "hour": "2025-07-30T20:15:00"},\n        {"approved": 770, "total": 990, "hour": "2025-07-30T20:30:00"},\n        {"approved": 820, "total": 1101, "hour": "2025-07-30T20:45:00"},\n        {"approved": 807, "total": 1080, "hour": "2025-07-30T21:00:00"},\n        {"approved": 900, "total": 1214, "hour": "2025-07-30T21:15:00"},\n        {"approved": 918, "total": 1201, "hour": "2025-07-30T21:30:00"},\n        {"approved": 839, "total": 1111, "hour": "2025-07-30T21:45:00"},\n        {"approved": 899, "total": 1166, "hour": "2025-07-30T22:00:00"},\n        {"approved": 999, "total": 1277, "hour": "2025-07-30T22:15:00"},\n        {"approved": 987, "total": 1274, "hour": "2025-07-30T22:30:00"},\n        {"approved": 1045, "total": 1326, "hour": "2025-07-30T22:45:00"},\n        {"approved": 1067, "total": 1383, "hour": "2025-07-30T23:00:00"},\n        {"approved": 993, "total": 1281, "hour": "2025-07-30T23:15:00"},\n        {"approved": 981, "total": 1262, "hour": "2025-07-30T23:30:00"},\n        {"approved": 1026, "total": 1331, "hour": "2025-07-30T23:45:00"},\n        {"approved": 1058, "total": 1372, "hour": "2025-07-31T00:00:00"},\n        {"approved": 1094, "total": 1466, "hour": "2025-07-31T00:15:00"},\n        {"approved": 987, "total": 1333, "hour": "2025-07-31T00:30:00"},\n        {"approved": 997, "total": 1258, "hour": "2025-07-31T00:45:00"},\n        {"approved": 1071, "total": 1320, "hour": "2025-07-31T01:00:00"},\n        {"approved": 1123, "total": 1420, "hour": "2025-07-31T01:15:00"},\n        {"approved": 1165, "total": 1484, "hour": "2025-07-31T01:30:00"},\n        {"approved": 1136, "total": 1467, "hour": "2025-07-31T01:45:00"},\n        {"approved": 1156, "total": 1512, "hour": "2025-07-31T02:00:00"},\n        {"approved": 1177, "total": 1493, "hour": "2025-07-31T02:15:00"},\n        {"approved": 1150, "total": 1503, "hour": "2025-07-31T02:30:00"},\n        {"approved": 1195, "total": 1497, "hour": "2025-07-31T02:45:00"},\n        {"approved": 1224, "total": 1599, "hour": "2025-07-31T03:00:00"},\n        {"approved": 1115, "total": 1468, "hour": "2025-07-31T03:15:00"},\n        {"approved": 1073, "total": 1432, "hour": "2025-07-31T03:30:00"},\n        {"approved": 1131, "total": 1472, "hour": "2025-07-31T03:45:00"},\n        {"approved": 1102, "total": 1413, "hour": "2025-07-31T04:00:00"},\n        {"approved": 1010, "total": 1337, "hour": "2025-07-31T04:15:00"},\n        {"approved": 951, "total": 1266, "hour": "2025-07-31T04:30:00"},\n        {"approved": 922, "total": 1262, "hour": "2025-07-31T04:45:00"},\n        {"approved": 982, "total": 1324, "hour": "2025-07-31T05:00:00"},\n        {"approved": 816, "total": 1086, "hour": "2025-07-31T05:15:00"},\n        {"approved": 917, "total": 1202, "hour": "2025-07-31T05:30:00"},\n        {"approved": 809, "total": 1111, "hour": "2025-07-31T05:45:00"},\n        {"approved": 784, "total": 1034, "hour": "2025-07-31T06:00:00"},\n        {"approved": 774, "total": 1022, "hour": "2025-07-31T06:15:00"},\n        {"approved": 708, "total": 962, "hour": "2025-07-31T06:30:00"},\n        {"approved": 697, "total": 918, "hour": "2025-07-31T06:45:00"},\n        {"approved": 650, "total": 886, "hour": "2025-07-31T07:00:00"},\n        {"approved": 657, "total": 917, "hour": "2025-07-31T07:15:00"},\n        {"approved": 652, "total": 870, "hour": "2025-07-31T07:30:00"},\n        {"approved": 579, "total": 807, "hour": "2025-07-31T07:45:00"},\n        {"approved": 538, "total": 769, "hour": "2025-07-31T08:00:00"},\n        {"approved": 514, "total": 698, "hour": "2025-07-31T08:15:00"},\n        {"approved": 536, "total": 744, "hour": "2025-07-31T08:30:00"},\n        {"approved": 495, "total": 699, "hour": "2025-07-31T08:45:00"},\n        {"approved": 523, "total": 704, "hour": "2025-07-31T09:00:00"},\n        {"approved": 518, "total": 692, "hour": "2025-07-31T09:15:00"},\n        {"approved": 492, "total": 656, "hour": "2025-07-31T09:30:00"},\n        {"approved": 497, "total": 644, "hour": "2025-07-31T09:45:00"},\n        {"approved": 562, "total": 730, "hour": "2025-07-31T10:00:00"},\n        {"approved": 524, "total": 723, "hour": "2025-07-31T10:15:00"},\n        {"approved": 612, "total": 836, "hour": "2025-07-31T10:30:00"},\n        {"approved": 544, "total": 719, "hour": "2025-07-31T10:45:00"},\n        {"approved": 562, "total": 776, "hour": "2025-07-31T11:00:00"},\n        {"approved": 594, "total": 761, "hour": "2025-07-31T11:15:00"},\n        {"approved": 562, "total": 761, "hour": "2025-07-31T11:30:00"},\n        {"approved": 553, "total": 723, "hour": "2025-07-31T11:45:00"},\n        {"approved": 623, "total": 789, "hour": "2025-07-31T12:00:00"},\n        {"approved": 561, "total": 717, "hour": "2025-07-31T12:15:00"},\n        {"approved": 574, "total": 712, "hour": "2025-07-31T12:30:00"},\n        {"approved": 636, "total": 833, "hour": "2025-07-31T12:45:00"},\n        {"approved": 698, "total": 879, "hour": "2025-07-31T13:00:00"},\n        {"approved": 678, "total": 887, "hour": "2025-07-31T13:15:00"},\n        {"approved": 606, "total": 809, "hour": "2025-07-31T13:30:00"},\n        {"approved": 663, "total": 853, "hour": "2025-07-31T13:45:00"},\n        {"approved": 666, "total": 870, "hour": "2025-07-31T14:00:00"},\n        {"approved": 755, "total": 965, "hour": "2025-07-31T14:15:00"},\n        {"approved": 768, "total": 982, "hour": "2025-07-31T14:30:00"},\n        {"approved": 729, "total": 887, "hour": "2025-07-31T14:45:00"},\n        {"approved": 1224, "total": 1535, "hour": "2025-07-31T15:00:00"},\n        {"approved": 1101, "total": 1435, "hour": "2025-07-31T15:15:00"},\n        {"approved": 1085, "total": 1410, "hour": "2025-07-31T15:30:00"},\n        {"approved": 897, "total": 1136, "hour": "2025-07-31T15:45:00"},\n        {"approved": 980, "total": 1286, "hour": "2025-07-31T16:00:00"},\n        {"approved": 911, "total": 1206, "hour": "2025-07-31T16:15:00"},\n        {"approved": 1037, "total": 1293, "hour": "2025-07-31T16:30:00"},\n        {"approved": 953, "total": 1243, "hour": "2025-07-31T16:45:00"},\n        {"approved": 932, "total": 1210, "hour": "2025-07-31T17:00:00"},\n        {"approved": 1001, "total": 1266, "hour": "2025-07-31T17:15:00"},\n        {"approved": 951, "total": 1235, "hour": "2025-07-31T17:30:00"},\n        {"approved": 913, "total": 1202, "hour": "2025-07-31T17:45:00"},\n        {"approved": 957, "total": 1216, "hour": "2025-07-31T18:00:00"},\n        {"approved": 880, "total": 1137, "hour": "2025-07-31T18:15:00"},\n        {"approved": 973, "total": 1243, "hour": "2025-07-31T18:30:00"},\n        {"approved": 866, "total": 1110, "hour": "2025-07-31T18:45:00"},\n        {"approved": 880, "total": 1152, "hour": "2025-07-31T19:00:00"},\n        {"approved": 918, "total": 1202, "hour": "2025-07-31T19:15:00"},\n        {"approved": 996, "total": 1316, "hour": "2025-07-31T19:30:00"},\n        {"approved": 938, "total": 1325, "hour": "2025-07-31T19:45:00"},\n        {"approved": 944, "total": 1283, "hour": "2025-07-31T20:00:00"},\n        {"approved": 985, "total": 1255, "hour": "2025-07-31T20:15:00"},\n        {"approved": 1030, "total": 1352, "hour": "2025-07-31T20:30:00"},\n        {"approved": 1046, "total": 1361, "hour": "2025-07-31T20:45:00"},\n        {"approved": 1100, "total": 1397, "hour": "2025-07-31T21:00:00"},\n        {"approved": 1060, "total": 1353, "hour": "2025-07-31T21:15:00"},\n        {"approved": 984, "total": 1225, "hour": "2025-07-31T21:30:00"},\n        {"approved": 949, "total": 1223, "hour": "2025-07-31T21:45:00"},\n        {"approved": 1085, "total": 1409, "hour": "2025-07-31T22:00:00"},\n        {"approved": 1221, "total": 1574, "hour": "2025-07-31T22:15:00"},\n        {"approved": 1159, "total": 1512, "hour": "2025-07-31T22:30:00"},\n        {"approved": 1216, "total": 1540, "hour": "2025-07-31T22:45:00"},\n        {"approved": 1185, "total": 1502, "hour": "2025-07-31T23:00:00"},\n        {"approved": 1201, "total": 1554, "hour": "2025-07-31T23:15:00"},\n        {"approved": 1133, "total": 1472, "hour": "2025-07-31T23:30:00"},\n        {"approved": 1077, "total": 1401, "hour": "2025-07-31T23:45:00"},\n        {"approved": 1164, "total": 1532, "hour": "2025-08-01T00:00:00"},\n        {"approved": 1187, "total": 1545, "hour": "2025-08-01T00:15:00"},\n        {"approved": 1174, "total": 1530, "hour": "2025-08-01T00:30:00"},\n        {"approved": 1087, "total": 1404, "hour": "2025-08-01T00:45:00"},\n        {"approved": 1143, "total": 1482, "hour": "2025-08-01T01:00:00"},\n        {"approved": 1178, "total": 1580, "hour": "2025-08-01T01:15:00"},\n        {"approved": 1187, "total": 1533, "hour": "2025-08-01T01:30:00"},\n        {"approved": 1180, "total": 1521, "hour": "2025-08-01T01:45:00"},\n        {"approved": 1133, "total": 1490, "hour": "2025-08-01T02:00:00"},\n        {"approved": 1233, "total": 1575, "hour": "2025-08-01T02:15:00"},\n        {"approved": 1201, "total": 1537, "hour": "2025-08-01T02:30:00"},\n        {"approved": 1161, "total": 1557, "hour": "2025-08-01T02:45:00"},\n        {"approved": 1147, "total": 1519, "hour": "2025-08-01T03:00:00"},\n        {"approved": 1158, "total": 1531, "hour": "2025-08-01T03:15:00"},\n        {"approved": 1151, "total": 1535, "hour": "2025-08-01T03:30:00"},\n        {"approved": 1112, "total": 1496, "hour": "2025-08-01T03:45:00"},\n        {"approved": 1068, "total": 1411, "hour": "2025-08-01T04:00:00"},\n        {"approved": 1118, "total": 1470, "hour": "2025-08-01T04:15:00"},\n        {"approved": 1060, "total": 1364, "hour": "2025-08-01T04:30:00"},\n        {"approved": 1021, "total": 1322, "hour": "2025-08-01T04:45:00"},\n        {"approved": 972, "total": 1330, "hour": "2025-08-01T05:00:00"},\n        {"approved": 979, "total": 1330, "hour": "2025-08-01T05:15:00"},\n        {"approved": 945, "total": 1322, "hour": "2025-08-01T05:30:00"},\n        {"approved": 924, "total": 1251, "hour": "2025-08-01T05:45:00"},\n        {"approved": 887, "total": 1230, "hour": "2025-08-01T06:00:00"},\n        {"approved": 856, "total": 1234, "hour": "2025-08-01T06:15:00"},\n        {"approved": 803, "total": 1115, "hour": "2025-08-01T06:30:00"},\n        {"approved": 767, "total": 1102, "hour": "2025-08-01T06:45:00"},\n        {"approved": 759, "total": 1057, "hour": "2025-08-01T07:00:00"},\n        {"approved": 741, "total": 1075, "hour": "2025-08-01T07:15:00"},\n        {"approved": 794, "total": 1006, "hour": "2025-08-01T07:30:00"},\n        {"approved": 645, "total": 896, "hour": "2025-08-01T07:45:00"},\n        {"approved": 619, "total": 914, "hour": "2025-08-01T08:00:00"},\n        {"approved": 578, "total": 823, "hour": "2025-08-01T08:15:00"},\n        {"approved": 618, "total": 871, "hour": "2025-08-01T08:30:00"},\n        {"approved": 607, "total": 803, "hour": "2025-08-01T08:45:00"},\n        {"approved": 571, "total": 803, "hour": "2025-08-01T09:00:00"},\n        {"approved": 532, "total": 772, "hour": "2025-08-01T09:15:00"},\n        {"approved": 520, "total": 717, "hour": "2025-08-01T09:30:00"},\n        {"approved": 507, "total": 729, "hour": "2025-08-01T09:45:00"},\n        {"approved": 533, "total": 770, "hour": "2025-08-01T10:00:00"},\n        {"approved": 520, "total": 754, "hour": "2025-08-01T10:15:00"},\n        {"approved": 590, "total": 804, "hour": "2025-08-01T10:30:00"},\n        {"approved": 630, "total": 806, "hour": "2025-08-01T10:45:00"},\n        {"approved": 679, "total": 894, "hour": "2025-08-01T11:00:00"},\n        {"approved": 587, "total": 758, "hour": "2025-08-01T11:15:00"},\n        {"approved": 589, "total": 785, "hour": "2025-08-01T11:30:00"},\n        {"approved": 613, "total": 813, "hour": "2025-08-01T11:45:00"},\n        {"approved": 619, "total": 842, "hour": "2025-08-01T12:00:00"},\n        {"approved": 624, "total": 846, "hour": "2025-08-01T12:15:00"},\n        {"approved": 665, "total": 888, "hour": "2025-08-01T12:30:00"},\n        {"approved": 668, "total": 877, "hour": "2025-08-01T12:45:00"},\n        {"approved": 684, "total": 944, "hour": "2025-08-01T13:00:00"},\n        {"approved": 743, "total": 958, "hour": "2025-08-01T13:15:00"},\n        {"approved": 666, "total": 871, "hour": "2025-08-01T13:30:00"},\n        {"approved": 756, "total": 956, "hour": "2025-08-01T13:45:00"},\n        {"approved": 643, "total": 878, "hour": "2025-08-01T14:00:00"},\n        {"approved": 747, "total": 1015, "hour": "2025-08-01T14:15:00"},\n        {"approved": 743, "total": 988, "hour": "2025-08-01T14:30:00"},\n        {"approved": 665, "total": 935, "hour": "2025-08-01T14:45:00"},\n        {"approved": 914, "total": 1207, "hour": "2025-08-01T15:00:00"},\n        {"approved": 806, "total": 1097, "hour": "2025-08-01T15:15:00"},\n        {"approved": 816, "total": 1069, "hour": "2025-08-01T15:30:00"},\n        {"approved": 757, "total": 1020, "hour": "2025-08-01T15:45:00"},\n        {"approved": 781, "total": 1030, "hour": "2025-08-01T16:00:00"},\n        {"approved": 783, "total": 1072, "hour": "2025-08-01T16:15:00"},\n        {"approved": 817, "total": 1092, "hour": "2025-08-01T16:30:00"},\n        {"approved": 867, "total": 1180, "hour": "2025-08-01T16:45:00"},\n        {"approved": 791, "total": 1050, "hour": "2025-08-01T17:00:00"},\n        {"approved": 858, "total": 1098, "hour": "2025-08-01T17:15:00"},\n        {"approved": 864, "total": 1110, "hour": "2025-08-01T17:30:00"},\n        {"approved": 807, "total": 1069, "hour": "2025-08-01T17:45:00"},\n        {"approved": 833, "total": 1144, "hour": "2025-08-01T18:00:00"},\n        {"approved": 836, "total": 1110, "hour": "2025-08-01T18:15:00"},\n        {"approved": 863, "total": 1130, "hour": "2025-08-01T18:30:00"},\n        {"approved": 869, "total": 1133, "hour": "2025-08-01T18:45:00"},\n        {"approved": 1077, "total": 1416, "hour": "2025-08-01T19:00:00"},\n        {"approved": 1167, "total": 1498, "hour": "2025-08-01T19:15:00"},\n        {"approved": 1165, "total": 1555, "hour": "2025-08-01T19:30:00"},\n        {"approved": 1015, "total": 1411, "hour": "2025-08-01T19:45:00"},\n        {"approved": 1040, "total": 1395, "hour": "2025-08-01T20:00:00"},\n        {"approved": 1073, "total": 1409, "hour": "2025-08-01T20:15:00"},\n        {"approved": 1072, "total": 1459, "hour": "2025-08-01T20:30:00"},\n        {"approved": 1103, "total": 1485, "hour": "2025-08-01T20:45:00"},\n        {"approved": 1091, "total": 1460, "hour": "2025-08-01T21:00:00"},\n        {"approved": 1121, "total": 1463, "hour": "2025-08-01T21:15:00"},\n        {"approved": 1087, "total": 1420, "hour": "2025-08-01T21:30:00"},\n        {"approved": 1045, "total": 1343, "hour": "2025-08-01T21:45:00"},\n        {"approved": 962, "total": 1732, "hour": "2025-08-01T22:00:00"},\n        {"approved": 962, "total": 1032, "hour": "2025-08-01T22:15:00"}\n    ]\n}\n')


# In[21]:


import sys
import os
from google.cloud.aiplatform.prediction import LocalModel

# Use absolute path to be sure
current_dir = os.getcwd()
src_dir = os.path.join(current_dir, "src_dir_sdk")

print(f"Looking for predictor in: {src_dir}")
print(f"predictor.py exists: {os.path.exists(os.path.join(src_dir, 'predictor.py'))}")

# Add absolute path to Python path
if src_dir not in sys.path:
    sys.path.insert(0, src_dir)

# Now import
from predictor import MLAnomalyPredictor

# Build with absolute path
local_model = LocalModel.build_cpr_model(
    src_dir,  # Use absolute path here too
    f"{REGION}-docker.pkg.dev/{PROJECT_ID}/{REPOSITORY}/{IMAGE}",
    predictor=MLAnomalyPredictor,
    requirements_path=os.path.join(src_dir, "requirements.txt"),
)

print("✅ Container built successfully!")


# In[25]:


print("🚀 Testing with corrected GCS structure...")

# Download the reorganized files first
MODEL_ARTIFACT_DIR = "./downloaded_model_artifacts_fixed"
os.makedirs(MODEL_ARTIFACT_DIR, exist_ok=True)

# Download from GCS with new structure
from google.cloud import storage
client = storage.Client()
bucket = client.bucket("ds-models-bucket")
blobs = bucket.list_blobs(prefix="anomaly-detection/ml_anomaly_model/")

for blob in blobs:
    if not blob.name.endswith('/'):
        # Preserve the folder structure (models/ subfolder)
        relative_path = blob.name.replace("anomaly-detection/ml_anomaly_model/", "")
        local_path = os.path.join(MODEL_ARTIFACT_DIR, relative_path)
        
        # Create subdirectories
        os.makedirs(os.path.dirname(local_path), exist_ok=True)
        
        blob.download_to_filename(local_path)
        print(f"✅ Downloaded: {relative_path}")

# Now test the container
with local_model.deploy_to_local_endpoint(
    artifact_uri=MODEL_ARTIFACT_DIR,
) as local_endpoint:
    
    predict_response = local_endpoint.predict(
        request_file="instances.json",
        headers={"Content-Type": "application/json"},
    )
    
    import json
    result = json.loads(predict_response.content)
    print("🎯 SUCCESS!")
    print(json.dumps(result, indent=2))


# In[26]:


# 1. Fix Docker auth (this is usually the only issue)
get_ipython().system('gcloud auth configure-docker us-central1-docker.pkg.dev --quiet')

# 2. Create repo if needed (ignore errors if it exists)
get_ipython().system('gcloud artifacts repositories create ds-models-repo --repository-format=docker --location=us-central1 --project=crowncoins-prod-lake-server || echo "Repo might already exist"')

# 3. Push the damn image
local_model.push_image()


# In[27]:


from google.cloud import aiplatform

# Initialize Vertex AI
aiplatform.init(project=PROJECT_ID, location=REGION)


# In[28]:


print(f"MODEL_ARTIFACT_DIR value: {MODEL_ARTIFACT_DIR}")

# If it's a local path, change it:
if not MODEL_ARTIFACT_DIR.startswith("gs://"):
    MODEL_ARTIFACT_DIR = "gs://ds-models-bucket/anomaly-detection/ml_anomaly_model/"
    print(f"✅ Corrected to GCS path: {MODEL_ARTIFACT_DIR}")

# Now upload
model = aiplatform.Model.upload(
    local_model=local_model,
    display_name=MODEL_DISPLAY_NAME,
    artifact_uri=MODEL_ARTIFACT_DIR,
)


# In[29]:


# Step 1: Create empty endpoint
endpoint = aiplatform.Endpoint.create(display_name="ml-anomaly-endpoint")

# Step 2: Deploy model to endpoint  
model.deploy(
    endpoint=endpoint,
    machine_type="n1-standard-8",
    min_replica_count=1,
    max_replica_count=3,
)


# In[30]:


from google.cloud import aiplatform

# Get the endpoint
endpoint = aiplatform.Endpoint("projects/crowncoins-prod-lake-server/locations/us-central1/endpoints/5908402753226407936")

# Undeploy all models
endpoint.undeploy_all()
print("✅ All models undeployed from endpoint")


# In[ ]:




